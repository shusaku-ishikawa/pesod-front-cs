{"version":3,"sources":["webpack:///./src/views/ForClient/Diagnostic/Doctors/Detail/Chat.vue","webpack:///./src/views/ForClient/Diagnostic/Doctors/Detail/Chat.vue?2164","webpack:///./src/views/ForClient/Diagnostic/Doctors/Detail/Chat.vue?9d4f","webpack:///./src/views/ForClient/Diagnostic/Doctors/Detail/Chat.vue?bb49"],"names":["class","fill-rule","d","clip-rule","ref","style","xmlns","viewBox","fill","myPrescript","title","router","push","doctor","image","src","alt","first_name","last_name","chatLogs","length","dateStr","created_at","log","i","getDate","chatLog","isMyMessage","speaker","customer","id","prescript_products","status","message","onSendMessage","menu","onAccept","onDeny","sendMessage","showMessageTemplates","customerMessageTemplates","t","onSelectTemplate","key","components","ChatMessageCard","ChatForm","ChatDateLabel","props","type","Object","setup","context","getToken","getPrescript","acceptPrescriptProducts","deletePrescriptProducts","fetchDoctorChatLogs","fetchCustomerMessageTemplates","WS_BASE_URL","connection","close","connect","messageArea","scrollDown","wsState","wsStateStr","prepareWs","value","messageStr","readyState","OPEN","messageJson","uuid","send","JSON","stringify","endMessage","situation","prescript_no","trim","onMessageReceivedCallback","includes","replace","name","url","access","window","setTimeout","format","render","__scopeId"],"mappings":"qQAGWA,MAAM,I,EAKP,yBAAuP,QAAjPC,YAAU,UAAUC,EAAE,qMAAqMC,YAAU,W,WAE7O,yBAEM,WAFD,WAEL,G,GAMFC,IAAI,cACJJ,MAAM,uC,GAGGA,MAAM,4B,GACJA,MAAM,kC,SAUPK,MAAA,6BACAC,MAAM,6BAA6BC,QAAQ,YAAYC,KAAK,gB,EAC5D,yBAAwG,QAAlGP,YAAU,UAAUC,EAAE,sDAAsDC,YAAU,W,YAEzFH,MAAM,Q,GAWdA,MAAM,kC,SAqDXA,MAAM,gC,EAEN,yBAAmC,OAA9BA,MAAM,WAAU,YAAQ,G,+BACxB,K,+BAA2G,S,SA8ChHK,MAAA,iBACAL,MAAM,8B,SAIJA,MAAM,mB,gUA1JO,EAAAS,a,yBAAnB,yBA4Kc,WA3KKC,MAAK,GACpB,iBAUM,CAVN,yBAUM,MAVN,EAUM,E,yBATJ,yBAKM,OAJH,QAAK,uBAAU,EAAAC,OAAOC,KAAI,0BAC3BN,MAAM,6BACNN,MAAM,kCAAkCO,QAAQ,YAAYC,KAAK,gB,CACjE,KAEF,Q,WAOJ,iBAgFM,CAhFN,yBAgFM,MAhFN,EAgFM,CA5EH,yBAyBY,GAzBAR,MAAM,sBAAsBK,MAAA,iB,YACrC,iBAqBM,CArBN,yBAqBM,MArBN,EAqBM,CApBJ,yBAkBM,MAlBN,EAkBM,CAhBI,EAAAQ,OAAOC,O,yBADf,yBAMC,O,MAJEC,IAAK,EAAAF,OAAOC,MACbE,IAAI,SACJhB,MAAM,eACNK,MAAA,8B,2CAEF,yBAKM,MALN,EAKM,CADJ,KAEF,yBAEM,MAFN,EAEM,6BADD,EAAAQ,OAAOI,YAAa,IAAC,6BAAG,EAAAJ,OAAOK,WAAS,W,MAUrD,yBAgDM,MAhDN,EAgDM,CA7CI,EAAAC,SAASC,OAAM,G,yBADvB,yBAGmB,G,MADhBC,QAAS,EAAAF,SAAQ,GAAIG,Y,wFAExB,yBAcW,2CAbU,EAAAH,UAAQ,SAAnBI,EAAKC,G,4EACPA,GAAC,CAICA,EAAI,GAAK,EAAAC,QAAQ,EAAAN,SAASK,GAAGF,cAAgB,EAAAG,QAAQ,EAAAN,SAASK,EAAI,GAAGF,a,yBAD7E,yBAGmB,G,MADhBD,QAASE,EAAID,Y,4DAEhB,yBAGqB,GAFpBI,QAASH,EACTI,YAAaJ,EAAIK,UAAY,EAAAnB,YAAYoB,SAASC,I,wDAmCjD,EAAArB,YAAYsB,mBAAmBX,QAAU,EAAAX,YAAYuB,QAAM,G,yBADnE,yBAMM,MANN,EAMM,CAFJ,EACA,yBAA2H,Y,EAArH,yBAA0G,QAApGhC,MAAM,+BAAgC,QAAK,+BAAE,EAAAW,OAAOC,KAAI,2BAA6B,Y,8CAGzE,GAAlB,EAAAH,YAAYuB,Q,yBADpB,yBAyCY,G,iBAvCD,EAAAC,Q,qDAAA,EAAAA,QAAO,IACf,OAAM,EAAAC,e,CAEUC,KAAI,GACnB,iBAIS,CAJT,yBAIS,UAHN,QAAK,8BAAE,EAAAC,UAAA,EAAAA,SAAA,qBACRpC,MAAM,0BAAyB,QAGjC,yBAIS,UAHN,QAAK,8BAAE,EAAAqC,QAAA,EAAAA,OAAA,qBACRrC,MAAM,0BAAyB,SAGjC,yBAIS,UAHN,QAAK,+BAAE,EAAAsC,YAAW,YACnBtC,MAAM,0BAAyB,gB,wEAyB7B,EAAAuC,sB,yBADR,yBAuBM,MAvBN,EAuBM,CAjBI,EAAAC,yBAAyBpB,Q,yBADjC,yBAYK,KAZL,EAYK,E,2BARH,yBAOK,2CALc,EAAAoB,0BAAwB,SAAjCC,EAAGjB,G,gCAFb,yBAOK,MANF,QAAK,mBAAE,EAAAkB,iBAAiBD,IAExBE,IAAKnB,EACNxB,MAAM,6C,6BAEHyC,EAAER,SAAO,kB,mCAGhB,yBAIM,QAFL,uB,qSCpJQ,+BAAgB,CAC7BW,WAAY,CACVC,gBAAA,OACAC,SAAA,OAEAC,cAAA,QAEFC,MAAO,CACLnC,OAAQ,CACNoC,KAAMC,SAIVC,MAb6B,SAavBH,EAAYI,GACF,iBAAd,IACMzC,EAAS,iBAFsB,EAMjC,iBADF0C,EALmC,EAKnCA,SALmC,EAajC,iBAJF5C,EATmC,EASnCA,YACA6C,EAVmC,EAUnCA,aACAC,EAXmC,EAWnCA,wBACAC,EAZmC,EAYnCA,wBAZmC,EAoBjC,iBAHFrC,EAjBmC,EAiBnCA,SACAsC,EAlBmC,EAkBnCA,oBACAC,EAnBmC,EAmBnCA,8BAnBmC,EAiCjC,iBAVFC,EAvBmC,EAuBnCA,YACAC,EAxBmC,EAwBnCA,WAEAC,GA1BmC,EAyBnCC,QAzBmC,EA0BnCD,OACAE,EA3BmC,EA2BnCA,YACAC,EA5BmC,EA4BnCA,WACAC,EA7BmC,EA6BnCA,QACAC,EA9BmC,EA8BnCA,WACAjC,EA/BmC,EA+BnCA,QACAkC,EAhCmC,EAgCnCA,UAII3B,EAA2B,iBAAwB,IACnDD,EAAuB,kBAAI,GAC3BG,EAAmB,SAACD,GAExBF,EAAqB6B,OAAQ,GAMzB9B,EAAc,SAAC+B,GACnB,GAAyB,MAArB5D,EAAY2D,OACQ,MAApBR,EAAWQ,OACXR,EAAWQ,MAAME,aAAeV,EAAWQ,MAAMG,KAAM,CAGzD,IAAMC,EAA4B,CAChCC,KAAMhE,EAAY2D,MAAMvC,SAAS4C,KACjCxC,QAASoC,GAEXT,EAAWQ,MAAMM,KAAKC,KAAKC,UAAUJ,MAInCpC,EAAQ,yDAAG,yGACU,MAArB3B,EAAY2D,MADD,8DAEX3D,EAAY2D,MAAMrC,0BAFP,QAEX,EAAsCX,OAF3B,gCAIMmC,IAJN,iBAKW,MAApBK,EAAWQ,MALF,iDAMTR,EAAWQ,MAAME,YAAcV,EAAWQ,MAAMG,OAC5CM,EAAkB,CACtBJ,KAAMhE,EAAY2D,MAAMvC,SAAS4C,KACjCK,UAAW,OAEblB,EAAWQ,MAAMM,KAAKC,KAAKC,UAAUC,KAX1B,wBAcWvB,IAdX,QAcf7C,EAAY2D,MAdG,OAgBf9B,EAAY,MAhBG,4CAAH,qDAkBRD,EAAM,yDAAG,uGACY,MAArB5B,EAAY2D,MADH,8DAET3D,EAAY2D,MAAMrC,0BAFT,QAET,EAAsCX,OAF7B,gCAGQoC,EAAwB/C,EAAY2D,MAAMW,cAHlD,qCAKazB,IALb,OAKb7C,EAAY2D,MALC,OAMb9B,EAAY,OANC,4CAAH,qDASNJ,EAAgB,WACfD,EAAQmC,MAAMY,SACnB1C,EAAYL,EAAQmC,OACpBnC,EAAQmC,MAAQ,KAGZa,EAAyB,yDAAG,WAAOT,GAAP,qFAC5BA,EAAYvC,QAAQiD,SAAS,SADD,gCAGJ5B,IAHI,OAG9B7C,EAAY2D,MAHkB,kDAAH,sDAwB/B,uBAAS,wCAAC,wHACkBd,IADlB,cACR7C,EAAY2D,MADJ,gBAG+BV,IAH/B,UAGRlB,EAAyB4B,MAHjB,OAKiB,MAArB3D,EAAY2D,MALR,wDAMwB,GAA5B3D,EAAY2D,MAAMpC,QACpBrB,EAAOwE,QAAQ,CAAEC,KAAM,kBAPjB,UASe3B,EAAoBhD,EAAY2D,MAAMW,cATrD,QASR5D,EAASiD,MATD,OAUFiB,EAVE,UAUO1B,EAVP,kCAUkClD,EAAY2D,aAV9C,aAUkC,EAAmBvC,SAAS4C,KAV9D,6BAU6EpB,WAV7E,aAU6E,EAAYiC,QAEjGnB,EAAUkB,EAAKlE,EAAU8D,GACzBM,OAAOC,YAAW,WAChBxB,MACC,KAfK,6CAoBV,8BAAgB,WAEdH,OAGF,IAAMpC,EAAU,SAACJ,GACf,OAAO,IAAOA,GAASoE,OAAO,eAIhC,MAAO,CACLnD,cACA7B,cACAmD,aACAjD,SACAoD,cACA9B,UACAd,WACAe,gBACA+B,UACAC,aACAzC,UACAiB,mBACAF,2BACAD,uBACAF,SACAD,e,UC/LN,EAAOsD,OAASA,EAChB,EAAOC,UAAY,kBAEJ,gB,oCCRf","file":"js/DoctorDetailChat.1177c911.js","sourcesContent":["<template>\n  <base-layout v-if=\"myPrescript\">\n    <template v-slot:title>\n      <div class=\"\">\n        <svg\n          @click=\"() => { router.push({ name: 'DiagnosticTop' }) }\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"absolute h-6 w-6 cursor-pointer\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n        </svg>\n        <div>\n          診察ルーム\n        </div>\n      </div>\n    </template>\n    <!-- <div class=\"flex-grow flex flex-col\"> -->\n    \n    <div\n      ref=\"messageArea\"\n      class=\"relative overflow-y-auto flex-grow \"\n    >\n       <page-title class=\"mb-3 text-left flex\" style=\"height: 40px\">\n          <div class=\"w-full flex items-center\">\n            <div class=\"flex items-center text-sm ml-2\">\n              <img\n                v-if=\"doctor.image\"\n                :src=\"doctor.image\"\n                alt=\"doctor\"\n                class=\"rounded-full\"\n                style=\"height: 30px; width: 30px\"\n              >\n              <svg\n                v-else\n                style=\"height: 30px; width: 30px\"\n                xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clip-rule=\"evenodd\" />\n              </svg>\n              <div class=\"px-2\">\n                {{ doctor.first_name }} {{ doctor.last_name }}\n              </div>\n             \n            </div>\n           \n          </div>\n          \n          \n      </page-title>\n    \n      <div class=\"absolute w-full space-y-4 pb-5\">\n        \n        <chat-date-label\n          v-if=\"chatLogs.length > 0\"\n          :dateStr=\"chatLogs[0].created_at\"\n        ></chat-date-label>\n        <template\n          v-for=\"(log, i) in chatLogs\"\n          :key=\"i\"\n        >\n         \n          <chat-date-label\n            v-if=\"i > 1 && getDate(chatLogs[i].created_at) !== getDate(chatLogs[i - 1].created_at)\"\n            :dateStr=\"log.created_at\"\n          ></chat-date-label>\n          <chat-message-card\n          :chatLog=\"log\"\n          :isMyMessage=\"log.speaker === myPrescript.customer.id\"\n          ></chat-message-card>\n          \n        </template>\n        \n        <!-- <div\n          class=\"px-2\"\n          v-if=\"myPrescript.prescript_products.length\" \n        >\n          <div\n            class=\"bg-blue-400 text-white\"\n          >\n            処方提案を受けています\n          </div>\n          <div\n            class=\"flex items-center\"\n          >\n            <button\n              @click=\"onAcceptPrescriptProducts\"\n              class=\"bg-blue-400 text-white \"\n            >\n              承諾\n            </button>\n            <button\n              class=\"bg-gray-200 ml-2\"\n            >\n              拒否\n            </button>\n            \n          </div>\n        </div> -->\n      </div>\n    </div>\n    <!--  -->\n    <div\n      v-if=\"myPrescript.prescript_products.length && myPrescript.status >= 4\"\n      class=\"bg-gray-100 text-center py-3\"\n    >\n      <div class=\"text-lg\">診察は終了です。</div>\n      <div>「<span class=\"text-blue-400 cursor-pointer\" @click=\"router.push({ name: 'DiagnosticTop' })\">お手続きメニュー</span>」へ戻る </div>\n    </div>\n    <chat-form\n      v-if=\"myPrescript.status == 3\"\n      v-model=\"message\"\n      @send=\"onSendMessage\"\n    >\n      <template v-slot:menu style=\"font-size: 12px\">\n        <button\n          @click=\"onAccept\"\n          class=\"rounded border text-xs\">\n          はい\n        </button>\n        <button\n          @click=\"onDeny\"\n          class=\"rounded border text-xs\">\n          いいえ\n        </button>\n        <button\n          @click=\"sendMessage('承知しました')\"\n          class=\"rounded border text-xs\">\n          承知しました\n        </button>\n      \n        <!-- <button\n          @click=\"showMessageTemplates = !showMessageTemplates\"\n          class=\"border rounded-lg py-1 text-sm flex items-center\"\n        >\n          <div>テンプレート</div>\n          <svg\n            v-if=\"!showMessageTemplates\"\n            class=\"h-4 w-4\"\n            xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z\" clip-rule=\"evenodd\" />\n          </svg>\n          <svg\n            v-else\n            class=\"h-4 w-4\"\n            xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n          </svg>\n        </button> -->\n      </template> \n    </chat-form>\n    <div\n      v-if=\"showMessageTemplates\"\n      style=\"height: 100px\"\n      class=\"relative overflow-y-scroll\"\n    >\n      <ul\n        v-if=\"customerMessageTemplates.length\"\n        class=\"absolute w-full\"\n      >\n        <li\n          @click=\"onSelectTemplate(t)\"\n          v-for=\"(t, i) in customerMessageTemplates\"\n          :key=\"i\"\n          class=\"border-b border-gray-100 hover:bg-gray-50\"\n        >\n          {{ t.message }}\n        </li>\n      </ul>\n      <div\n        v-else\n      >\n        テンプレートがありません。\n      </div>\n    </div>\n    <!-- </div> -->\n  </base-layout>\n</template>\n<style lang=\"scss\" scoped>\n  div.date {\n    padding: 0 10px;\n  }\n  div.date:before,\n  div.date:after {\n     content: \"\";\n     flex: 1 1;\n     border-bottom: 1px solid lightgray;\n     margin: auto;\n}\n</style>\n<script lang=\"ts\">\nimport { callWithErrorHandling, computed, defineComponent, onBeforeMount, onBeforeUnmount, onMounted, ref, SetupContext } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport useChatLog from '@/types/ChatLog';\nimport useDoctor from '@/types/Doctor';\nimport useSocket from '@/types/Socket';\n\nimport ChatMessageCard from './Chat/MessageCard.vue';\nimport ChatForm from './Chat/Form.vue';\nimport { IDoctor, IChatMessage, IMessageTemplate, IPrescript } from '@/types/Interfaces';\nimport usePrescript from '@/types/Prescript';\nimport useAuth from '@/types/Auth';\n\n// import WsStateMarker from '@/components/WsStateMarker.vue';\n\nimport moment from 'moment';\n\nimport ChatDateLabel from './Chat/DateLabel.vue';\nimport { debounce } from 'lodash';\n\nexport default defineComponent({\n  components: {\n    ChatMessageCard,\n    ChatForm,\n    // WsStateMarker,\n    ChatDateLabel\n  },\n  props: {\n    doctor: {\n      type: Object as () => IDoctor\n    },\n    \n  },\n  setup(props: any, context: SetupContext) {\n    const route = useRoute();\n    const router = useRouter();\n\n    const {\n      getToken\n    } = useAuth();\n\n    const {\n      myPrescript,\n      getPrescript,\n      acceptPrescriptProducts,\n      deletePrescriptProducts\n    } = usePrescript();\n\n\n    const {\n      chatLogs,\n      fetchDoctorChatLogs,\n      fetchCustomerMessageTemplates\n    } = useChatLog();\n    \n    const {\n      WS_BASE_URL,\n      connection,\n      connect,\n      close,\n      messageArea,\n      scrollDown,\n      wsState,\n      wsStateStr,\n      message,\n      prepareWs\n    } = useSocket();\n    \n\n    const customerMessageTemplates = ref<IMessageTemplate[]>([]);\n    const showMessageTemplates = ref(false);\n    const onSelectTemplate = (t: IMessageTemplate) => {\n      // message.value = m;\n      showMessageTemplates.value = false;\n    };\n    \n\n    // alert(JSON.stringify(myPrescript.value))\n    \n    const sendMessage = (messageStr: string) => {\n      if (myPrescript.value == null) return;\n      if (connection.value == null) return;\n      if (connection.value.readyState === connection.value.OPEN) {\n        // send message\n        // messageJson\n        const messageJson: IChatMessage = {\n          uuid: myPrescript.value.customer.uuid,\n          message: messageStr,\n        };\n        connection.value.send(JSON.stringify(messageJson));\n      }\n    }\n    \n    const onAccept = async () => {\n      if (myPrescript.value == null) return;\n      if (myPrescript.value.prescript_products?.length) {\n        // accept\n        const data = await acceptPrescriptProducts();\n        if (connection.value == null) return;\n        if (connection.value.readyState == connection.value.OPEN) {\n          const endMessage: any = {\n            uuid: myPrescript.value.customer.uuid,\n            situation: 'end'\n          }\n          connection.value.send(JSON.stringify(endMessage))\n        }\n      }\n      myPrescript.value = await getPrescript();\n\n      sendMessage('はい')\n    };\n    const onDeny = async () => {\n      if (myPrescript.value == null) return;\n      if (myPrescript.value.prescript_products?.length) {\n        const data = await deletePrescriptProducts(myPrescript.value.prescript_no);\n      }\n      myPrescript.value = await getPrescript();\n      sendMessage('いいえ')\n    }\n    \n    const onSendMessage = () => {\n      if (!message.value.trim()) return;\n      sendMessage(message.value);\n      message.value = '';\n    };\n\n    const onMessageReceivedCallback = async (messageJson: IChatMessage) => {\n      if (messageJson.message.includes('table')) {\n        \n        myPrescript.value = await getPrescript();\n        // if (data.prescript_products.length > 0) {\n          \n        // }\n      }  \n    };\n    \n    // const scrollHandler = debounce(async (e: Event) => {\n    //   console.log('handelr')\n    //   if (messageArea.value != null) {\n    //     if (messageArea.value.scrollTop == 0) {\n    //         try {\n    //         await fetchChatLogByPage(myPrescript.value?.prescript_no || '', chatLogPage.value);\n    //       } catch (err) {\n    //         console.log(err)\n    //       }\n    //     }\n    //   }\n      \n    // }, 20)\n    \n    onMounted(async () => {\n      myPrescript.value = await getPrescript();\n\n      customerMessageTemplates.value = await fetchCustomerMessageTemplates();\n\n      if (myPrescript.value == null) return;\n      if (myPrescript.value.status != 3) {\n        router.replace({ name: 'DiagnosticTop' })\n      }\n      chatLogs.value = await fetchDoctorChatLogs(myPrescript.value.prescript_no);\n      const url = `${WS_BASE_URL}/chat/doctor/${myPrescript.value?.customer.uuid}/?token=${getToken()?.access}`;\n    \n      prepareWs(url, chatLogs, onMessageReceivedCallback);\n      window.setTimeout(() => {\n        scrollDown();\n      }, 100)\n      // if (messageArea.value == null) return;\n      // messageArea.value.onscroll = scrollHandler;\n    });\n\n    onBeforeUnmount(() => {\n      // alert('closing socket')\n      close();\n    })\n\n    const getDate = (dateStr: string) => {\n      return moment(dateStr).format('yyyy/MM/DD')\n    }\n\n   \n    return {\n      sendMessage,\n      myPrescript,\n      connection,\n      router,\n      messageArea,\n      message,\n      chatLogs,\n      onSendMessage,\n      wsState,\n      wsStateStr,\n      getDate,\n      onSelectTemplate,\n      customerMessageTemplates,\n      showMessageTemplates,\n      onDeny,\n      onAccept,\n    };\n  }\n})\n</script>","\nimport { callWithErrorHandling, computed, defineComponent, onBeforeMount, onBeforeUnmount, onMounted, ref, SetupContext } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport useChatLog from '@/types/ChatLog';\nimport useDoctor from '@/types/Doctor';\nimport useSocket from '@/types/Socket';\n\nimport ChatMessageCard from './Chat/MessageCard.vue';\nimport ChatForm from './Chat/Form.vue';\nimport { IDoctor, IChatMessage, IMessageTemplate, IPrescript } from '@/types/Interfaces';\nimport usePrescript from '@/types/Prescript';\nimport useAuth from '@/types/Auth';\n\n// import WsStateMarker from '@/components/WsStateMarker.vue';\n\nimport moment from 'moment';\n\nimport ChatDateLabel from './Chat/DateLabel.vue';\nimport { debounce } from 'lodash';\n\nexport default defineComponent({\n  components: {\n    ChatMessageCard,\n    ChatForm,\n    // WsStateMarker,\n    ChatDateLabel\n  },\n  props: {\n    doctor: {\n      type: Object as () => IDoctor\n    },\n    \n  },\n  setup(props: any, context: SetupContext) {\n    const route = useRoute();\n    const router = useRouter();\n\n    const {\n      getToken\n    } = useAuth();\n\n    const {\n      myPrescript,\n      getPrescript,\n      acceptPrescriptProducts,\n      deletePrescriptProducts\n    } = usePrescript();\n\n\n    const {\n      chatLogs,\n      fetchDoctorChatLogs,\n      fetchCustomerMessageTemplates\n    } = useChatLog();\n    \n    const {\n      WS_BASE_URL,\n      connection,\n      connect,\n      close,\n      messageArea,\n      scrollDown,\n      wsState,\n      wsStateStr,\n      message,\n      prepareWs\n    } = useSocket();\n    \n\n    const customerMessageTemplates = ref<IMessageTemplate[]>([]);\n    const showMessageTemplates = ref(false);\n    const onSelectTemplate = (t: IMessageTemplate) => {\n      // message.value = m;\n      showMessageTemplates.value = false;\n    };\n    \n\n    // alert(JSON.stringify(myPrescript.value))\n    \n    const sendMessage = (messageStr: string) => {\n      if (myPrescript.value == null) return;\n      if (connection.value == null) return;\n      if (connection.value.readyState === connection.value.OPEN) {\n        // send message\n        // messageJson\n        const messageJson: IChatMessage = {\n          uuid: myPrescript.value.customer.uuid,\n          message: messageStr,\n        };\n        connection.value.send(JSON.stringify(messageJson));\n      }\n    }\n    \n    const onAccept = async () => {\n      if (myPrescript.value == null) return;\n      if (myPrescript.value.prescript_products?.length) {\n        // accept\n        const data = await acceptPrescriptProducts();\n        if (connection.value == null) return;\n        if (connection.value.readyState == connection.value.OPEN) {\n          const endMessage: any = {\n            uuid: myPrescript.value.customer.uuid,\n            situation: 'end'\n          }\n          connection.value.send(JSON.stringify(endMessage))\n        }\n      }\n      myPrescript.value = await getPrescript();\n\n      sendMessage('はい')\n    };\n    const onDeny = async () => {\n      if (myPrescript.value == null) return;\n      if (myPrescript.value.prescript_products?.length) {\n        const data = await deletePrescriptProducts(myPrescript.value.prescript_no);\n      }\n      myPrescript.value = await getPrescript();\n      sendMessage('いいえ')\n    }\n    \n    const onSendMessage = () => {\n      if (!message.value.trim()) return;\n      sendMessage(message.value);\n      message.value = '';\n    };\n\n    const onMessageReceivedCallback = async (messageJson: IChatMessage) => {\n      if (messageJson.message.includes('table')) {\n        \n        myPrescript.value = await getPrescript();\n        // if (data.prescript_products.length > 0) {\n          \n        // }\n      }  \n    };\n    \n    // const scrollHandler = debounce(async (e: Event) => {\n    //   console.log('handelr')\n    //   if (messageArea.value != null) {\n    //     if (messageArea.value.scrollTop == 0) {\n    //         try {\n    //         await fetchChatLogByPage(myPrescript.value?.prescript_no || '', chatLogPage.value);\n    //       } catch (err) {\n    //         console.log(err)\n    //       }\n    //     }\n    //   }\n      \n    // }, 20)\n    \n    onMounted(async () => {\n      myPrescript.value = await getPrescript();\n\n      customerMessageTemplates.value = await fetchCustomerMessageTemplates();\n\n      if (myPrescript.value == null) return;\n      if (myPrescript.value.status != 3) {\n        router.replace({ name: 'DiagnosticTop' })\n      }\n      chatLogs.value = await fetchDoctorChatLogs(myPrescript.value.prescript_no);\n      const url = `${WS_BASE_URL}/chat/doctor/${myPrescript.value?.customer.uuid}/?token=${getToken()?.access}`;\n    \n      prepareWs(url, chatLogs, onMessageReceivedCallback);\n      window.setTimeout(() => {\n        scrollDown();\n      }, 100)\n      // if (messageArea.value == null) return;\n      // messageArea.value.onscroll = scrollHandler;\n    });\n\n    onBeforeUnmount(() => {\n      // alert('closing socket')\n      close();\n    })\n\n    const getDate = (dateStr: string) => {\n      return moment(dateStr).format('yyyy/MM/DD')\n    }\n\n   \n    return {\n      sendMessage,\n      myPrescript,\n      connection,\n      router,\n      messageArea,\n      message,\n      chatLogs,\n      onSendMessage,\n      wsState,\n      wsStateStr,\n      getDate,\n      onSelectTemplate,\n      customerMessageTemplates,\n      showMessageTemplates,\n      onDeny,\n      onAccept,\n    };\n  }\n})\n","import { render } from \"./Chat.vue?vue&type=template&id=eb11058c&scoped=true\"\nimport script from \"./Chat.vue?vue&type=script&lang=ts\"\nexport * from \"./Chat.vue?vue&type=script&lang=ts\"\n\nimport \"./Chat.vue?vue&type=style&index=0&id=eb11058c&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-eb11058c\"\n\nexport default script","export * from \"-!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Chat.vue?vue&type=style&index=0&id=eb11058c&lang=scss&scoped=true\""],"sourceRoot":""}