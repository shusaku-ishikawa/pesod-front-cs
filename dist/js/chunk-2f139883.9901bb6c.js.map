{"version":3,"sources":["webpack:///./src/types/Auth.ts","webpack:///./src/mixins/FormValidator.ts","webpack:///./src/types/Doctor.ts","webpack:///./src/views/ForDoctor/Login.vue","webpack:///./src/views/ForDoctor/Login.vue?426c","webpack:///./src/views/ForDoctor/Login.vue?d2ba"],"names":["getUUID","get","data","console","log","sendSignupEmail","formData","post","activateAccount","token","registerProfile","registrationUrl","formDataCopy","address","street","building","put","getToken","d","window","localStorage","getItem","JSON","parse","createToken","postData","storeToken","setItem","stringify","remoteToken","removeItem","getUserId","id","getProfile","userId","signup","useAuth","required","v","getRegexpTester","pattern","errorMessage","test","fetchDoctors","results","getDoctor","useDoctors","doctors","doctor","class","stroke-linecap","stroke-linejoin","stroke-width","xmlns","viewBox","fill","fill-rule","clip-rule","title","router","push","stroke","disabled","loading","ref","method","onLogin","loginError","label","type","autocomplete","email","rules","formRequired","password","components","setup","form","setLoginError","message","value","setTimeout","event","isValid","checkValidity","alert","name","response","status","render"],"mappings":"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","file":"js/chunk-2f139883.9901bb6c.js","sourcesContent":["import { client } from '@/types/Axios';\nimport { ILogin, ISignup, ICustomer, IPrescript, IToken, IRegistration } from '@/types/Interfaces';\nimport { computed, ComputedRef, WritableComputedRef } from 'vue';\nimport { cloneDeep, clone, runInContext } from \"lodash\";\n\n// const token: WritableComputedRef<IToken | null> = computed({\n//   get: () => {\n//     const token = window.localStorage.getItem('token');\n//     if (token == null) return null;\n//     return JSON.parse(token);\n//   },\n//   set: (data: IToken | null) => {\n//     if (data == null) {\n//       window.localStorage.removeItem('token');\n//       return;\n//     }\n//     window.localStorage.setItem('token', JSON.stringify(data))\n//   }  \n// });\n\n\nconst getUUID = async () => {\n  const {data} = await client.get('/uuid/')\n  console.log(data)\n  return data;\n}\n\nconst sendSignupEmail = async (formData: any) => {\n  const {data} = await client.post('/customer_pre_create/', formData);\n  console.log(data);\n  return data;  \n};\nconst activateAccount = async (token: string) => {\n  const {data} = await client.get(`/customer_activator/${token}`);\n  console.log(data)\n  return data;  \n};\nconst registerProfile = async (registrationUrl: string, formData: IRegistration) => {\n  const formDataCopy = cloneDeep(formData);\n  \n  formDataCopy.address = `${formDataCopy.street}${formDataCopy.building}`;\n  delete formDataCopy.street;\n  delete formDataCopy.building;\n  const {data} = await client.put(registrationUrl, formDataCopy);\n  console.log(data)\n  return data;\n}\n\nconst getToken = () => {\n  const d = window.localStorage.getItem('token')\n  if (d == null) return;\n  return JSON.parse(d);\n}\nconst createToken = async (postData: ILogin) => {\n  const {data} = await client.post('/auth/jwt/create/', postData);\n  // console.log(data)\n  return data;\n  // window.localStorage.setItem('token', JSON.stringify(data));    \n};\n\nconst storeToken = (token: IToken) => {\n  window.localStorage.setItem('token', JSON.stringify(token))\n}\n\nconst remoteToken = () => {\n  window.localStorage.removeItem('token');\n};\n\nconst getUserId = async () => {\n  const {data} = await client.get('/auth/users/me/')\n  return data.id;\n};\n\nconst getProfile = async (userId: number) => {\n  const {data} = await client.get(`/auth/users/${userId}/`);\n  console.log(data)\n  return data;\n};\n\n\nconst signup = async (postData: ISignup) => {\n  const { data } = await client.post(\n    `/signup/`, postData\n  );\n};\n\n\n\nexport default function useAuth () {\n  return {\n    sendSignupEmail,\n    activateAccount,\n    registerProfile,\n    createToken,\n    storeToken,\n    getToken,\n    remoteToken,\n    getUserId,\n    getProfile,\n    signup,\n    getUUID\n  }\n}","\nconst required = (v: any) => {\n  if (typeof v === 'string') {\n    return v ? null : '必須項目です。'\n  }\n};\nconst getRegexpTester = (pattern: RegExp, errorMessage: string) => {\n  return (v: any) => {\n    return pattern.test(v) ? null : errorMessage;\n  }\n}\n\nexport {\n  required as formRequired,\n  getRegexpTester\n}","import { ref, computed } from 'vue';\nimport { IDoctor } from './Interfaces';\nimport { client } from './Axios';\n\nconst fetchDoctors = async (): Promise<IDoctor[]> => {\n  const { data } = await client.get('/doctors/');\n  const { results } = data;\n  return results\n}\n\nconst getDoctor = async (id: number): Promise<IDoctor> => {\n  const { data } = await client.get(`/doctor/${id}`);\n  return data;\n}\n\n\n// const myDoctor = computed(() => {\n//   return doctors.value.find(d => d.id===1);\n// })\nexport default function useDoctors() {\n  const doctors = ref<IDoctor[]>([]);\n  const doctor = ref<IDoctor | null>(null);\n\n  return {\n    // myDoctor,\n    doctor,\n    doctors,\n    getDoctor,\n    fetchDoctors\n  }\n}","<template>\n  <top-layout>\n    <template v-slot:title>\n      <div class=\"relative sm:hidden\">\n        \n        <svg\n          @click=\"() => { router.push({ name: 'DoctorLp' }) }\"\n          class=\"absolute top-0 left-0 w-10 h-10\"\n          xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\" />\n        </svg>\n        <div class=\"\">\n          ログイン\n        </div>\n      </div>\n      <div class=\"hidden sm:flex items-center justify-center font-semibold\">\n        <div class=\"text-6xl text-black\">\n          Persona\n        </div>\n        <div class=\"text-4xl bg-black px-3 py-2 text-white ml-2\">\n          For Doctor\n        </div>\n      </div>\n    </template>\n    <div class=\"grid grid-cols-12\">\n      <form\n        class=\"py-5 col-span-12 sm:col-span-6 sm:col-start-4 md:col-span-4 md:col-start-5 rounded p-5 \"\n        :disabled=\"loading\"\n        ref=\"from\"\n        method=\"post\"\n        @submit.prevent=\"onLogin\"\n      >\n         <div\n          v-if=\"loginError != ''\"\n          class=\"mb-5 text-red-600\"\n        >\n          {{ loginError }}\n        </div>\n        <p-input\n          class=\"mb-10\"\n          label=\"メールアドレス\"\n          id=\"email\"\n          type=\"email\"\n          :required=\"true\"\n          autocomplete=\"email\"\n          v-model=\"formData.email\"\n          :rules=\"[formRequired]\"\n        >\n        </p-input>\n        \n        <p-input\n          class=\"mb-12\"\n          label=\"パスワード\"\n          autocomplete=\"current-password\"\n          id=\"password\"\n          type=\"password\"\n          v-model=\"formData.password\"\n          :rules=\"[formRequired]\"\n        >\n        </p-input>\n        \n        <div\n          class=\"text-center\"\n        >\n          <button\n            :disabled=\"loading\"\n            type=\"submit\"\n            class=\"primary mb-10 w-72 sm:block sm:w-full\"\n          >\n            <div class=\"inline-block\">\n              ログイン\n            </div>\n            <svg\n            class=\" w-6 h-6 float-right\"\n            xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clip-rule=\"evenodd\" />\n            </svg>\n          </button>\n          <div>\n            <a class=\"cursor-pointer \">パスワードをお忘れの方はこちら</a>\n          </div>\n        </div>\n      </form>\n    </div>\n  </top-layout>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { ILogin } from '@/types/Interfaces';\n\nimport {formRequired} from '@/mixins/FormValidator';\n\nimport useAuth from '@/types/Auth';\nimport useDoctor from '@/types/Doctor';\n\nexport default defineComponent({\n  components: {\n  },\n  setup() {\n    const router = useRouter();\n\n    const {\n      createToken,\n      storeToken,\n      remoteToken,\n      getUserId,\n    } = useAuth();\n    \n    const {\n      getDoctor\n    } = useDoctor();\n\n    const formData = ref<ILogin>({\n      email: '',\n      password: '' \n    });\n    \n    const form = ref<HTMLFormElement | null>(null);\n\n    const loginError = ref<string>('');\n    \n    const setLoginError = (message: string) => {\n      loginError.value = message;\n      window.setTimeout(() => {\n        loginError.value = '';\n      }, 5000);  \n    };\n    \n    onMounted(() => {\n      remoteToken()\n    });\n\n    const loading = ref(false);\n\n    const onLogin = async (event: Event) => {\n      // validate\n      if (form.value) {\n        const isValid = form.value.checkValidity();\n        if (!isValid) {\n          alert('not vaida')\n          return;\n        }\n      }\n      try {\n        loading.value = true;\n        const token = await createToken(formData.value);\n        storeToken(token);\n        // const userId = await getUserId();\n        // const profile = await getDoctor(userId);\n        // console.log(profile)\n        // window.localStorage.setItem('profile', JSON.stringify(profile));\n\n        router.push({ name: 'DoctorDashboard' }) ;\n      } catch (err) {\n        console.log(err)\n        if (err.response) {\n          const { status, data } = err.response;\n          console.log(data)\n          if (status >= 400 && status < 500) {\n            setLoginError('ログインに失敗しました。')\n          } else {\n            setLoginError(JSON.stringify(data))\n          }\n          // formData.value = {\n          //   email: '',\n          //   password: ''\n          // }\n        } else {\n          // network error or timeout\n          setLoginError('ネットワークエラー')\n        }\n        \n      }\n      loading.value = false;\n      \n    };\n    return {\n      loading,\n      form,\n      formRequired,\n      formData,\n      loginError,\n      // formValid,\n      onLogin\n    };\n  }\n})\n</script>","\nimport { defineComponent, ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { ILogin } from '@/types/Interfaces';\n\nimport {formRequired} from '@/mixins/FormValidator';\n\nimport useAuth from '@/types/Auth';\nimport useDoctor from '@/types/Doctor';\n\nexport default defineComponent({\n  components: {\n  },\n  setup() {\n    const router = useRouter();\n\n    const {\n      createToken,\n      storeToken,\n      remoteToken,\n      getUserId,\n    } = useAuth();\n    \n    const {\n      getDoctor\n    } = useDoctor();\n\n    const formData = ref<ILogin>({\n      email: '',\n      password: '' \n    });\n    \n    const form = ref<HTMLFormElement | null>(null);\n\n    const loginError = ref<string>('');\n    \n    const setLoginError = (message: string) => {\n      loginError.value = message;\n      window.setTimeout(() => {\n        loginError.value = '';\n      }, 5000);  \n    };\n    \n    onMounted(() => {\n      remoteToken()\n    });\n\n    const loading = ref(false);\n\n    const onLogin = async (event: Event) => {\n      // validate\n      if (form.value) {\n        const isValid = form.value.checkValidity();\n        if (!isValid) {\n          alert('not vaida')\n          return;\n        }\n      }\n      try {\n        loading.value = true;\n        const token = await createToken(formData.value);\n        storeToken(token);\n        // const userId = await getUserId();\n        // const profile = await getDoctor(userId);\n        // console.log(profile)\n        // window.localStorage.setItem('profile', JSON.stringify(profile));\n\n        router.push({ name: 'DoctorDashboard' }) ;\n      } catch (err) {\n        console.log(err)\n        if (err.response) {\n          const { status, data } = err.response;\n          console.log(data)\n          if (status >= 400 && status < 500) {\n            setLoginError('ログインに失敗しました。')\n          } else {\n            setLoginError(JSON.stringify(data))\n          }\n          // formData.value = {\n          //   email: '',\n          //   password: ''\n          // }\n        } else {\n          // network error or timeout\n          setLoginError('ネットワークエラー')\n        }\n        \n      }\n      loading.value = false;\n      \n    };\n    return {\n      loading,\n      form,\n      formRequired,\n      formData,\n      loginError,\n      // formValid,\n      onLogin\n    };\n  }\n})\n","import { render } from \"./Login.vue?vue&type=template&id=30592f77\"\nimport script from \"./Login.vue?vue&type=script&lang=ts\"\nexport * from \"./Login.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}