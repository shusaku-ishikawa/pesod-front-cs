{"version":3,"sources":["webpack:///./src/types/Prescript.ts","webpack:///./src/views/ForClient/Diagnostic/Doctors/Detail/Top.vue","webpack:///./src/views/ForClient/Diagnostic/Doctors/Detail/Top.vue?bcb9","webpack:///./src/views/ForClient/Diagnostic/Doctors/Detail/Top.vue?454e"],"names":["getPrescript","get","data","console","log","fixInterview","selectDoctor","doctorId","patch","doctor","fetchPrescripts","results","setPrescriptProducts","prescriptNo","products","prescriptProducts","map","p","product","id","acceptPrescriptProducts","usePrescript","myPrescript","prescripts","class","xmlns","fill","viewBox","stroke","stroke-linecap","stroke-linejoin","stroke-width","d","title","image","src","alt","first_name","last_name","prefecture","description","onSelectDoctor","to","href","navigate","components","props","type","Object","setup","prop","_","router","push","name","error","render"],"mappings":"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","file":"js/chunk-3a60091b.6b3dcda3.js","sourcesContent":["\n\nimport { ComputedRef, computed, ref, WritableComputedRef } from 'vue';\nimport { IPrescript, IProduct } from '@/types/Interfaces';\nimport { client } from '@/types/Axios';\n\n//const prescript: WritableComputedRef<IPrescript | null> = computed({\n  // get: () => {\n  //   const data = window.localStorage.getItem('prescript');\n  //   if (data) {\n  //     return JSON.parse(data);\n  //   } else {\n  //     return null;\n  //   }\n  // },\n  // set: (data: IPrescript | null) => {\n  //   if (data == null) {\n  //     window.localStorage.removeItem('prescript');\n  //     return;\n  //   }\n  //   window.localStorage.setItem('prescript', JSON.stringify(data))\n  // }\n// });\n\nconst getPrescript = async () => {\n  const {data} = await client.get('/prescript/');\n  console.log(data)\n  return data;\n}\n\nconst fixInterview = async () => {\n  const {data} = await client.get('/prescript/interview_fix')\n  return data;\n}\n\nconst selectDoctor = async (doctorId: number) => {\n  const {data} = await client.patch('/prescript/select_doctor', { doctor: doctorId })\n  return data; \n}\n\nconst fetchPrescripts = async (): Promise<IPrescript[]> => {\n  const {data} = await client.get('/prescripts/')\n  console.log(data)\n  return data.results;\n}\n\nconst setPrescriptProducts = async (prescriptNo: string, products: IProduct[]) => {\n  const prescriptProducts = products.map((p: IProduct) => ({ product: p.id }));\n  console.log(prescriptProducts)\n  const {data} = await client.patch(`/prescribe/${prescriptNo}`, { products: prescriptProducts });\n  console.log(data)\n  return data;\n}\n\nconst acceptPrescriptProducts = async () => {\n  const {data} = await client.patch('/prescript/exam_fix', {});\n  console.log(data);\n  return data;\n};\n\nexport default function usePrescript () {\n  const myPrescript = ref<IPrescript | null>(null);\n  const prescripts = ref<IPrescript[]>([]);\n\n  return {\n    // prescript,\n    myPrescript,\n    prescripts,\n    getPrescript,\n    fixInterview,\n    selectDoctor,\n    fetchPrescripts,\n    setPrescriptProducts,\n    acceptPrescriptProducts,\n    \n  }\n}","<template>\n  <base-layout>\n    <template v-slot:title>\n      <page-title>\n        医師プロフィール\n      </page-title>\n    </template>\n    <div class=\"flex flex-col h-full \">\n      <div class=\"grid grid-cols-12 flex-grow flex flex-col\">\n        <div class=\"col-span-10 col-start-2\">\n          <div class=\"py-10\">\n            <img\n              class=\"w-36 h-36 inline-block\"\n              v-if=\"doctor.image\"\n              :src=\"doctor.image\" alt=\"\">\n            <svg\n              v-else\n              class=\"w-36 h-36 inline-block\"\n              xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          </div>\n          <div class=\"text-3xl mb-2\">\n            {{ doctor.first_name }} {{ doctor.last_name  }}\n          </div>\n          <div class=\"mb-2\">\n            {{ doctor.prefecture }}\n          </div>\n          <div class=\"mb-4 break-words\">\n            {{ doctor.description }}\n          </div>\n          <div class=\"mb-2\">\n            \n            <button\n              @click=\"onSelectDoctor\"\n              class=\"primary block mx-auto w-72\"\n            >\n              診察を始める\n            </button>\n          </div>\n          <div>\n            <router-link\n              :to=\"{ name: 'DiagnosticDoctorList' }\"\n              v-slot=\"{ href, navigate }\"\n            >\n              <button\n                :href=\"href\"\n                @click=\"navigate\"\n                class=\"secondary block mx-auto w-72\"\n              >\n                他の医師を選択\n              </button>\n            </router-link>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n  </base-layout>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, onMounted, ref } from 'vue';\nimport { useRoute } from 'vue-router';\n\nimport useDoctors from '@/types/Doctor';\nimport { IDoctor, IPrescript } from '@/types/Interfaces';\nimport usePrescript from '@/types/Prescript';\nimport router from '@/router';\n\nexport default defineComponent({\n  components: {\n  },\n  props: {\n    doctor: {\n      type: Object as () => IDoctor\n    },\n  },\n  setup(prop, _) {\n    const {\n      selectDoctor\n    } = usePrescript();\n\n    const onSelectDoctor = async () => {\n      if (prop.doctor == null) return;\n      try {\n        const data = await selectDoctor(prop.doctor.id || -1);\n        // update myPrescript\n        \n        router.push({ name: 'DiagnosticDoctorDetailChat' })\n      } catch (err) {\n        console.error(err)\n      }\n      \n    }\n    \n    return {\n      onSelectDoctor\n    }\n  }\n})\n</script>","\nimport { defineComponent, onMounted, ref } from 'vue';\nimport { useRoute } from 'vue-router';\n\nimport useDoctors from '@/types/Doctor';\nimport { IDoctor, IPrescript } from '@/types/Interfaces';\nimport usePrescript from '@/types/Prescript';\nimport router from '@/router';\n\nexport default defineComponent({\n  components: {\n  },\n  props: {\n    doctor: {\n      type: Object as () => IDoctor\n    },\n  },\n  setup(prop, _) {\n    const {\n      selectDoctor\n    } = usePrescript();\n\n    const onSelectDoctor = async () => {\n      if (prop.doctor == null) return;\n      try {\n        const data = await selectDoctor(prop.doctor.id || -1);\n        // update myPrescript\n        \n        router.push({ name: 'DiagnosticDoctorDetailChat' })\n      } catch (err) {\n        console.error(err)\n      }\n      \n    }\n    \n    return {\n      onSelectDoctor\n    }\n  }\n})\n","import { render } from \"./Top.vue?vue&type=template&id=8c3d416a\"\nimport script from \"./Top.vue?vue&type=script&lang=ts\"\nexport * from \"./Top.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}