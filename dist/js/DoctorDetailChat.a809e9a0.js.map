{"version":3,"sources":["webpack:///./src/views/ForClient/Diagnostic/Store/Product/ListCard.vue","webpack:///./src/views/ForClient/Diagnostic/Store/Product/ListCard.vue?9e21","webpack:///./src/views/ForClient/Diagnostic/Store/Product/ListCard.vue?056e","webpack:///./src/views/ForClient/Diagnostic/Doctors/Detail/Chat.vue","webpack:///./src/views/ForClient/Diagnostic/Doctors/Detail/Chat.vue?2164","webpack:///./src/views/ForClient/Diagnostic/Doctors/Detail/Chat.vue?9d4f","webpack:///./src/views/ForClient/Diagnostic/Doctors/Detail/Chat.vue?9919","webpack:///./src/types/Doctor.ts"],"names":["class","fill-rule","d","clip-rule","isSelectable","modelValue","inCart","onCheck","$event","src","product","image","alt","style","name","price","toLocaleString","router","push","id","xmlns","viewBox","fill","components","emits","props","type","Object","Boolean","default","setup","context","e","console","log","emit","render","ref","myPrescript","title","doctor","first_name","last_name","wsState","chatLogs","length","getDate","created_at","i","chatLog","isMyMessage","speaker","customer","prescript_products","p","key","onAcceptPrescriptProducts","message","onSendMessage","menu","showMessageTemplates","customerMessageTemplates","t","onSelectTemplate","ChatMessageCard","ChatForm","WsStateMarker","ProductListCard","token","getPrescript","acceptPrescriptProducts","doctors","fetchDoctors","fetchDoctorChatLogs","fetchCustomerMessageTemplates","WS_BASE_URL","connection","close","connect","messageArea","scrollDown","wsStateStr","prepareWs","value","trim","readyState","OPEN","messageJson","uuid","send","JSON","stringify","err","error","onMessageReceivedCallback","includes","alert","status","replace","data","response","url","access","window","setTimeout","dateStr","format","__scopeId","get","results","getDoctor","useDoctors"],"mappings":"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","file":"js/DoctorDetailChat.a809e9a0.js","sourcesContent":["<template>\n  <div class=\"flex items-center px-3 py-2 hover:bg-gray-100\">\n    <div v-if=\"isSelectable\">\n      <p-checkbox\n        :modelValue=\"inCart\"\n        @update:modelValue=\"onCheck($event)\"\n      ></p-checkbox>\n    </div>\n    <div>\n      \n      <img\n        :src=\"product.image\"\n        alt=\"\"\n        style=\"width: 50px; height: 50px\"\n      >\n    </div>\n    <div class=\"flex-grow text-left ml-2\">\n      <div>\n        {{ product.name }}\n      </div>\n      <div>\n        {{ (product.price || 0).toLocaleString() }}円\n      </div>\n    </div>\n    <div>\n      <svg\n        v-if=\"isSelectable\"\n        @click=\"() => { router.push({ name: 'StoreProductDetail', params: { id: product.id } }) }\"\n        class=\"w-8 h-8 inline-block cursor-pointer\"\n        xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n        <path fill-rule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clip-rule=\"evenodd\" />\n      </svg>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { IProduct } from '@/types/Interfaces';\nimport { defineComponent, onMounted, SetupContext } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nexport default defineComponent({\n  components: {\n  },\n  emits: [\n    'update:inCart'\n  ],\n  props: {\n    product: {\n      type: Object as () => IProduct\n    },\n    inCart: {\n      type: Boolean\n    },\n    isSelectable: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  setup(props: any, context: SetupContext) {\n    const router = useRouter();\n    \n    const onCheck = (e: boolean) => {\n      console.log(e)\n      context.emit('update:inCart', e);\n    };\n\n    return {\n      router,\n      onCheck\n    };\n  }\n})\n</script>","\nimport { IProduct } from '@/types/Interfaces';\nimport { defineComponent, onMounted, SetupContext } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nexport default defineComponent({\n  components: {\n  },\n  emits: [\n    'update:inCart'\n  ],\n  props: {\n    product: {\n      type: Object as () => IProduct\n    },\n    inCart: {\n      type: Boolean\n    },\n    isSelectable: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  setup(props: any, context: SetupContext) {\n    const router = useRouter();\n    \n    const onCheck = (e: boolean) => {\n      console.log(e)\n      context.emit('update:inCart', e);\n    };\n\n    return {\n      router,\n      onCheck\n    };\n  }\n})\n","import { render } from \"./ListCard.vue?vue&type=template&id=16074df9\"\nimport script from \"./ListCard.vue?vue&type=script&lang=ts\"\nexport * from \"./ListCard.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <base-layout v-if=\"myPrescript\">\n    <template v-slot:title>\n      <page-title>\n        <div class=\"flex items-center\">\n          <div>診察室</div>\n          <div class=\"flex items-center text-sm ml-2\">\n            <div>[</div>\n            <img\n              v-if=\"doctor.image\"\n              :src=\"doctor.image\"\n              alt=\"doctor\"\n              style=\"height: 30px; width: 30px\"\n            >\n            <svg\n              v-else\n              style=\"height: 30px; width: 30px\"\n              xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clip-rule=\"evenodd\" />\n            </svg>\n            <div class=\"px-2\">\n              {{ doctor.first_name }} {{ doctor.last_name }}\n            </div>\n            <div>]</div>\n          </div>\n        </div>\n        \n        <ws-state-marker\n          :wsState=\"wsState\"\n        ></ws-state-marker>\n      </page-title>\n    </template>\n    <!-- <div class=\"flex-grow flex flex-col\"> -->\n      \n    <div\n      ref=\"messageArea\"\n      class=\"relative overflow-y-auto flex-grow pt-1\"\n    >\n    \n      <div class=\"absolute w-full space-y-4 pb-5\">\n        <div\n          v-if=\"chatLogs.length > 0\"\n          class=\"date flex\"\n        >\n          {{ getDate(chatLogs[0].created_at) }}\n        </div>\n        <template\n          v-for=\"(log, i) in chatLogs\"\n          :key=\"i\"\n        >\n          <div\n            class=\"date flex\"\n            v-if=\"i > 1 && getDate(chatLogs[i].created_at) !== getDate(chatLogs[i - 1].created_at)\">\n            {{ getDate(log.created_at) }}\n          </div>\n          <chat-message-card\n          :chatLog=\"log\"\n          :isMyMessage=\"log.speaker === myPrescript.customer.id\"\n          ></chat-message-card>\n          \n        </template>\n        <div\n          class=\"px-2\"\n          v-if=\"myPrescript.prescript_products.length\" \n        >\n          <div\n            class=\"bg-blue-400 text-white\"\n          >\n            処方提案を受けています\n          </div>\n          <product-list-card\n            v-for=\"(p, i) in myPrescript.prescript_products\"\n            :key=\"i\"\n            :product=\"p\"\n            :isSelectable=\"false\"\n          ></product-list-card>\n          <div\n            class=\"flex items-center\"\n          >\n            <button\n              @click=\"onAcceptPrescriptProducts\"\n              class=\"bg-blue-400 text-white \"\n            >\n              承諾\n            </button>\n            <button\n              class=\"bg-gray-200 ml-2\"\n            >\n              拒否\n            </button>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n    <chat-form\n      v-model=\"message\"\n      @send=\"onSendMessage\"\n    >\n      <template v-slot:menu>\n        <button\n          @click=\"showMessageTemplates = !showMessageTemplates\"\n          class=\"border rounded-lg py-1 text-sm flex items-center\"\n        >\n          <div>テンプレート</div>\n          <svg\n            v-if=\"!showMessageTemplates\"\n            class=\"h-4 w-4\"\n            xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z\" clip-rule=\"evenodd\" />\n          </svg>\n          <svg\n            v-else\n            class=\"h-4 w-4\"\n            xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n          </svg>\n        </button>\n      </template> \n    </chat-form>\n    <div\n      v-if=\"showMessageTemplates\"\n      style=\"height: 100px\"\n      class=\"relative overflow-y-scroll\"\n    >\n      <ul\n        v-if=\"customerMessageTemplates.length\"\n        class=\"absolute w-full\"\n      >\n        <li\n          @click=\"onSelectTemplate(t)\"\n          v-for=\"(t, i) in customerMessageTemplates\"\n          :key=\"i\"\n          class=\"border-b border-gray-100 hover:bg-gray-50\"\n        >\n          {{ t.message }}\n        </li>\n      </ul>\n      <div\n        v-else\n      >\n        テンプレートがありません。\n      </div>\n    </div>\n    <!-- </div> -->\n  </base-layout>\n</template>\n<style lang=\"scss\" scoped>\n  div.date {\n    padding: 0 10px;\n  }\n  div.date:before,\n  div.date:after {\n     content: \"\";\n     flex: 1 1;\n     border-bottom: 1px solid lightgray;\n     margin: auto;\n}\n</style>\n<script lang=\"ts\">\nimport { callWithErrorHandling, computed, defineComponent, onBeforeMount, onBeforeUnmount, onMounted, ref, SetupContext } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport useChatLog from '@/types/ChatLog';\nimport useDoctor from '@/types/Doctor';\nimport useSocket from '@/types/Socket';\n\nimport ChatMessageCard from './Chat/MessageCard.vue';\nimport ChatForm from './Chat/Form.vue';\nimport { IDoctor, IChatMessage, IMessageTemplate, IPrescript } from '@/types/Interfaces';\nimport usePrescript from '@/types/Prescript';\nimport useAuth from '@/types/Auth';\n\nimport WsStateMarker from '@/components/WsStateMarker.vue';\n\nimport moment from 'moment';\n\nimport ProductListCard from '@/views/ForClient/Diagnostic/Store/Product/ListCard.vue';\n\nexport default defineComponent({\n  components: {\n    ChatMessageCard,\n    ChatForm,\n    WsStateMarker,\n    ProductListCard\n  },\n  props: {\n    doctor: {\n      type: Object as () => IDoctor\n    },\n    \n  },\n  setup(props: any, context: SetupContext) {\n    const route = useRoute();\n    const router = useRouter();\n\n    const {\n      token\n    } = useAuth();\n\n    const {\n      myPrescript,\n      getPrescript,\n      acceptPrescriptProducts\n    } = usePrescript();\n\n    const {\n      doctors,\n      fetchDoctors\n    } = useDoctor();\n\n    const {\n      chatLogs,\n      fetchDoctorChatLogs,\n      fetchCustomerMessageTemplates\n    } = useChatLog();\n    \n    const {\n      WS_BASE_URL,\n      connection,\n      connect,\n      close,\n      messageArea,\n      scrollDown,\n      wsState,\n      wsStateStr,\n      message,\n      prepareWs\n    } = useSocket();\n    \n\n    const customerMessageTemplates = ref<IMessageTemplate[]>([]);\n    const showMessageTemplates = ref(false);\n    const onSelectTemplate = (t: IMessageTemplate) => {\n      // message.value = m;\n      showMessageTemplates.value = false;\n    };\n    \n\n    // alert(JSON.stringify(myPrescript.value))\n    \n    const onSendMessage = () => {\n      if (myPrescript.value == null) return;\n      if (connection.value == null) return;\n      if (!message.value.trim()) return;\n      if (connection.value.readyState === connection.value.OPEN) {\n        // send message\n        // messageJson\n        const messageJson: IChatMessage = {\n          uuid: myPrescript.value.customer.uuid,\n          message: message.value,\n        };\n        try {\n          connection.value.send(JSON.stringify(messageJson));\n          message.value = ''; // reset \n        } catch (err) {\n          console.error('errr')\n        }\n      }\n    };\n\n    const onMessageReceivedCallback = async (messageJson: IChatMessage) => {\n      if (messageJson.message.includes('[[処方提案]]')) {\n        alert('処方提案うけたよ')\n        myPrescript.value = await getPrescript();\n        // if (data.prescript_products.length > 0) {\n          \n        // }\n      }  \n    };\n\n    onMounted(async () => {\n      myPrescript.value = await getPrescript();\n\n      customerMessageTemplates.value = await fetchCustomerMessageTemplates();\n\n      if (myPrescript.value == null) return;\n      if (myPrescript.value.status != 3) {\n        router.replace({ name: 'DiagnosticTop' })\n      }\n      try {\n        const data = await fetchDoctorChatLogs(myPrescript.value.id);  \n        chatLogs.value = data;\n      } catch (err) {\n        console.error(err.response)\n        return;\n      }\n      const url = `${WS_BASE_URL}/chat/doctor/${myPrescript.value?.customer.uuid}/?token=${token.value?.access}`;\n    \n      prepareWs(url, chatLogs, onMessageReceivedCallback);\n      window.setTimeout(() => {\n        scrollDown();\n      }, 100)\n      \n    });\n\n    onBeforeUnmount(() => {\n      // alert('closing socket')\n      close();\n    })\n\n    const getDate = (dateStr: string) => {\n      return moment(dateStr).format('yyyy/MM/DD')\n    }\n\n    const onAcceptPrescriptProducts = async () => {\n      const data = await acceptPrescriptProducts();\n      router.push({ name: 'DiagnosticTop' })\n    }\n    return {\n      myPrescript,\n      connection,\n      router,\n      messageArea,\n      message,\n      chatLogs,\n      onSendMessage,\n      wsState,\n      wsStateStr,\n      getDate,\n      onSelectTemplate,\n      customerMessageTemplates,\n      showMessageTemplates,\n      onAcceptPrescriptProducts\n    };\n  }\n})\n</script>","\nimport { callWithErrorHandling, computed, defineComponent, onBeforeMount, onBeforeUnmount, onMounted, ref, SetupContext } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport useChatLog from '@/types/ChatLog';\nimport useDoctor from '@/types/Doctor';\nimport useSocket from '@/types/Socket';\n\nimport ChatMessageCard from './Chat/MessageCard.vue';\nimport ChatForm from './Chat/Form.vue';\nimport { IDoctor, IChatMessage, IMessageTemplate, IPrescript } from '@/types/Interfaces';\nimport usePrescript from '@/types/Prescript';\nimport useAuth from '@/types/Auth';\n\nimport WsStateMarker from '@/components/WsStateMarker.vue';\n\nimport moment from 'moment';\n\nimport ProductListCard from '@/views/ForClient/Diagnostic/Store/Product/ListCard.vue';\n\nexport default defineComponent({\n  components: {\n    ChatMessageCard,\n    ChatForm,\n    WsStateMarker,\n    ProductListCard\n  },\n  props: {\n    doctor: {\n      type: Object as () => IDoctor\n    },\n    \n  },\n  setup(props: any, context: SetupContext) {\n    const route = useRoute();\n    const router = useRouter();\n\n    const {\n      token\n    } = useAuth();\n\n    const {\n      myPrescript,\n      getPrescript,\n      acceptPrescriptProducts\n    } = usePrescript();\n\n    const {\n      doctors,\n      fetchDoctors\n    } = useDoctor();\n\n    const {\n      chatLogs,\n      fetchDoctorChatLogs,\n      fetchCustomerMessageTemplates\n    } = useChatLog();\n    \n    const {\n      WS_BASE_URL,\n      connection,\n      connect,\n      close,\n      messageArea,\n      scrollDown,\n      wsState,\n      wsStateStr,\n      message,\n      prepareWs\n    } = useSocket();\n    \n\n    const customerMessageTemplates = ref<IMessageTemplate[]>([]);\n    const showMessageTemplates = ref(false);\n    const onSelectTemplate = (t: IMessageTemplate) => {\n      // message.value = m;\n      showMessageTemplates.value = false;\n    };\n    \n\n    // alert(JSON.stringify(myPrescript.value))\n    \n    const onSendMessage = () => {\n      if (myPrescript.value == null) return;\n      if (connection.value == null) return;\n      if (!message.value.trim()) return;\n      if (connection.value.readyState === connection.value.OPEN) {\n        // send message\n        // messageJson\n        const messageJson: IChatMessage = {\n          uuid: myPrescript.value.customer.uuid,\n          message: message.value,\n        };\n        try {\n          connection.value.send(JSON.stringify(messageJson));\n          message.value = ''; // reset \n        } catch (err) {\n          console.error('errr')\n        }\n      }\n    };\n\n    const onMessageReceivedCallback = async (messageJson: IChatMessage) => {\n      if (messageJson.message.includes('[[処方提案]]')) {\n        alert('処方提案うけたよ')\n        myPrescript.value = await getPrescript();\n        // if (data.prescript_products.length > 0) {\n          \n        // }\n      }  \n    };\n\n    onMounted(async () => {\n      myPrescript.value = await getPrescript();\n\n      customerMessageTemplates.value = await fetchCustomerMessageTemplates();\n\n      if (myPrescript.value == null) return;\n      if (myPrescript.value.status != 3) {\n        router.replace({ name: 'DiagnosticTop' })\n      }\n      try {\n        const data = await fetchDoctorChatLogs(myPrescript.value.id);  \n        chatLogs.value = data;\n      } catch (err) {\n        console.error(err.response)\n        return;\n      }\n      const url = `${WS_BASE_URL}/chat/doctor/${myPrescript.value?.customer.uuid}/?token=${token.value?.access}`;\n    \n      prepareWs(url, chatLogs, onMessageReceivedCallback);\n      window.setTimeout(() => {\n        scrollDown();\n      }, 100)\n      \n    });\n\n    onBeforeUnmount(() => {\n      // alert('closing socket')\n      close();\n    })\n\n    const getDate = (dateStr: string) => {\n      return moment(dateStr).format('yyyy/MM/DD')\n    }\n\n    const onAcceptPrescriptProducts = async () => {\n      const data = await acceptPrescriptProducts();\n      router.push({ name: 'DiagnosticTop' })\n    }\n    return {\n      myPrescript,\n      connection,\n      router,\n      messageArea,\n      message,\n      chatLogs,\n      onSendMessage,\n      wsState,\n      wsStateStr,\n      getDate,\n      onSelectTemplate,\n      customerMessageTemplates,\n      showMessageTemplates,\n      onAcceptPrescriptProducts\n    };\n  }\n})\n","import { render } from \"./Chat.vue?vue&type=template&id=2fc66ddb&scoped=true\"\nimport script from \"./Chat.vue?vue&type=script&lang=ts\"\nexport * from \"./Chat.vue?vue&type=script&lang=ts\"\n\nimport \"./Chat.vue?vue&type=style&index=0&id=2fc66ddb&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-2fc66ddb\"\n\nexport default script","export * from \"-!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Chat.vue?vue&type=style&index=0&id=2fc66ddb&lang=scss&scoped=true\"","import { ref, computed } from 'vue';\nimport { IDoctor } from './Interfaces';\nimport { client } from './Axios';\n\nconst fetchDoctors = async (): Promise<IDoctor[]> => {\n  const { data } = await client.get('/doctors/');\n  const { results } = data;\n  return results\n}\n\nconst getDoctor = async (id: number): Promise<IDoctor> => {\n  const { data } = await client.get(`/doctor/${id}`);\n  return data;\n}\n\n\n// const myDoctor = computed(() => {\n//   return doctors.value.find(d => d.id===1);\n// })\nexport default function useDoctors() {\n  const doctors = ref<IDoctor[]>([]);\n  const doctor = ref<IDoctor | null>(null);\n\n  return {\n    // myDoctor,\n    doctor,\n    doctors,\n    getDoctor,\n    fetchDoctors\n  }\n}"],"sourceRoot":""}