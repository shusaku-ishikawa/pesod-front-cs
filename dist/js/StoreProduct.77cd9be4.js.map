{"version":3,"sources":["webpack:///./src/views/ForClient/Diagnostic/Store/Product.vue","webpack:///./src/views/ForClient/Diagnostic/Store/Product.vue?a1f7","webpack:///./src/views/ForClient/Diagnostic/Store/Product.vue?0794","webpack:///./src/types/Product.ts"],"names":["products","length","cart","onUpdateCart","emits","props","type","Object","setup","context","fetchProducts","event","console","log","emit","value","render","get","data","results","getProduct","id","useProducts","product"],"mappings":"0MAEU,EAAAA,SAASC,Q,iBADjB,eAKe,G,MAHZD,SAAU,EAAAA,SACVE,KAAM,EAAAA,KACN,gBAAa,EAAAC,c,yGCCH,iBAAgB,CAM7BC,MAAO,CACL,eAEFC,MAAO,CACLH,KAAM,CACJI,KAAMC,SAGVC,MAd6B,SAcvBH,EAAYI,GAAqB,MAIjC,iBAFFT,EAFmC,EAEnCA,SACAU,EAHmC,EAGnCA,cAGIP,EAAe,SAACQ,GACpBC,QAAQC,IAAIF,GACZF,EAAQK,KAAK,cAAeH,IAM9B,OAHA,eAAS,wCAAC,8GACeD,IADf,OACRV,EAASe,MADD,mDAGH,CACLf,WACAG,mBCjCN,EAAOa,OAASA,EAED,gB,sHCDTN,EAAa,yDAAG,sHACG,OAAOO,IAAI,cADd,uBACZC,EADY,EACZA,KACRN,QAAQC,IAAIK,GAFQ,kBAGbA,EAAKC,SAHQ,2CAAH,qDAObC,EAAU,yDAAG,WAAOC,GAAP,gGACjBT,QAAQC,IAAIQ,GADK,SAEI,OAAOJ,IAAP,mBAAuBI,IAF3B,uBAEVH,EAFU,EAEVA,KACPN,QAAQC,IAAIK,GAHK,kBAIVA,GAJU,2CAAH,sDAOF,SAAUI,IACtB,IAAMC,EAAU,eAAqB,MAC/BvB,EAAW,eAAgB,IAEjC,MAAO,CACLuB,UACAvB,WACAU,gBACAU","file":"js/StoreProduct.77cd9be4.js","sourcesContent":["<template>\n  <router-view\n    v-if=\"products.length\"\n    :products=\"products\"\n    :cart=\"cart\"\n    @update:cart=\"onUpdateCart\"\n  ></router-view>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, onMounted, SetupContext } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { IProduct, ISubscription } from '@/types/Interfaces';\nimport useProducts from '@/types/Product';\n\nexport default defineComponent({\n  // props: {\n  //   subscription: {\n  //     type: Object as () => ISubscription\n  //   }\n  // },\n  emits: [\n    'update:cart',\n  ],\n  props: {\n    cart: {\n      type: Object as () => IProduct[]\n    }\n  },\n  setup(props: any, context: SetupContext) {\n    const {\n      products,\n      fetchProducts  \n    } = useProducts();\n\n    const onUpdateCart = (event: IProduct[]) => {\n      console.log(event)\n      context.emit('update:cart', event);\n    };\n\n    onMounted(async () => {\n      products.value = await fetchProducts();\n    })\n    return {\n      products,\n      onUpdateCart\n    }\n  }\n})\n</script>","\nimport { defineComponent, onMounted, SetupContext } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { IProduct, ISubscription } from '@/types/Interfaces';\nimport useProducts from '@/types/Product';\n\nexport default defineComponent({\n  // props: {\n  //   subscription: {\n  //     type: Object as () => ISubscription\n  //   }\n  // },\n  emits: [\n    'update:cart',\n  ],\n  props: {\n    cart: {\n      type: Object as () => IProduct[]\n    }\n  },\n  setup(props: any, context: SetupContext) {\n    const {\n      products,\n      fetchProducts  \n    } = useProducts();\n\n    const onUpdateCart = (event: IProduct[]) => {\n      console.log(event)\n      context.emit('update:cart', event);\n    };\n\n    onMounted(async () => {\n      products.value = await fetchProducts();\n    })\n    return {\n      products,\n      onUpdateCart\n    }\n  }\n})\n","import { render } from \"./Product.vue?vue&type=template&id=36073f5a\"\nimport script from \"./Product.vue?vue&type=script&lang=ts\"\nexport * from \"./Product.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { ref, computed } from 'vue';\nimport { IProduct } from './Interfaces';\nimport { client } from '@/types/Axios';\n\nconst fetchProducts = async (): Promise<IProduct[]> => {\n  const { data } = await client.get('/products/');\n  console.log(data);\n  return data.results;\n  \n};\n\nconst getProduct = async (id: string) => {\n  console.log(id)\n  const {data} = await client.get(`/product/${id}`);\n  console.log(data)\n  return data;\n}\n\nexport default function useProducts() {\n  const product = ref<IProduct | null>(null);\n  const products = ref<IProduct[]>([]);\n\n  return {\n    product,\n    products,\n    fetchProducts,\n    getProduct,\n  }\n}"],"sourceRoot":""}