{"version":3,"sources":["webpack:///./src/types/Doctor.ts","webpack:///./src/views/ForClient/Diagnostic/Doctors/List.vue","webpack:///./src/views/ForClient/Diagnostic/Doctors/ListCard.vue","webpack:///./src/views/ForClient/Diagnostic/Doctors/ListCard.vue?e47b","webpack:///./src/views/ForClient/Diagnostic/Doctors/ListCard.vue?5656","webpack:///./src/views/ForClient/Diagnostic/Doctors/List.vue?691b","webpack:///./src/views/ForClient/Diagnostic/Doctors/List.vue?bc20"],"names":["fetchDoctors","get","data","results","getDoctor","id","useDoctors","doctors","doctor","class","fill-rule","d","clip-rule","title","router","push","xmlns","viewBox","fill","i","length","key","style","stroke","stroke-linecap","stroke-linejoin","stroke-width","image","src","alt","prefecture","first_kana","last_kana","first_name","last_name","clinic_name","status","components","props","type","Object","setup","render","DoctorListCard","dataReady","value","console","log","error"],"mappings":"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","file":"js/DoctorTop.ae7b40a8.js","sourcesContent":["import { ref, computed } from 'vue';\nimport { IDoctor } from './Interfaces';\nimport { client } from './Axios';\n\nconst fetchDoctors = async (): Promise<IDoctor[]> => {\n  const { data } = await client.get('/doctors/');\n  const { results } = data;\n  return results\n}\n\nconst getDoctor = async (id: number): Promise<IDoctor> => {\n  const { data } = await client.get(`/doctor/${id}`);\n  return data;\n}\n\n\n// const myDoctor = computed(() => {\n//   return doctors.value.find(d => d.id===1);\n// })\nexport default function useDoctors() {\n  const doctors = ref<IDoctor[]>([]);\n  const doctor = ref<IDoctor | null>(null);\n\n  return {\n    // myDoctor,\n    doctor,\n    doctors,\n    getDoctor,\n    fetchDoctors\n  }\n}","<template>\n  <base-layout>\n    <template v-slot:title>\n      <div class=\"\">\n        <svg\n          @click=\"() => { router.push({ name: 'DiagnosticTop' }) }\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"absolute h-6 w-6 cursor-pointer\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n        </svg>\n        <div>\n          医師を選択\n        </div>\n      </div>\n    </template>\n    <div class=\"flex flex-col flex-grow pt-10\">\n      <div class=\"px-2\">\n        <div class=\"font-semibold mb-3\">\n          受診を希望する医師を選択してください\n        </div>\n        <div class=\"text-left text-sm text-gray-400 mb-3\">\n          医師を選択すると、詳細画面へ遷移します。診察はチャ\n          ットで行われるため、対面によるストレスを感じることは\n          ありません。\n        </div>\n        <div class=\"bg-gray-100 py-2 px-2 text-xs text-gray-600 text-left\">\n          健康被害の可能性がある等、医師の判断で他の通信手段でご連\n          絡させていただく場合がございます。\n        </div>\n      </div>\n      <div class=\"flex-grow  overflow-y-auto\">\n        <div class=\" left-0 w-full pr-4\">\n          <doctor-list-card\n            :class=\"{ 'border-b': i < doctors.length - 1 }\"\n            v-for=\"(d, i) in doctors\"\n            :key=\"i\"\n            :doctor=\"d\"\n          ></doctor-list-card>\n        </div>\n        \n      </div>\n    </div>\n  </base-layout>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, ref, onMounted } from 'vue';\n\nimport usePrescript from '@/types/Prescript';\nimport useDoctors from '@/types/Doctor';\nimport DoctorListCard from './ListCard.vue';\nimport DoctorListFilter from './ListFilter.vue';\nimport { IDoctor } from '@/types/Interfaces';\nimport {useRouter} from 'vue-router';\n\nexport default defineComponent({\n  components: {\n    DoctorListCard,\n  },\n  setup() {\n    const router = useRouter();\n\n    \n    const {\n      doctors,\n      fetchDoctors\n    } = useDoctors();\n\n    const dataReady = ref(false);\n    \n    onMounted(async () => {\n      try {\n        doctors.value = await fetchDoctors();\n        dataReady.value = true;\n        console.log(doctors.value)\n      } catch (err) {\n        console.error(err);\n      }\n    });\n    return {\n      dataReady,\n      doctors\n    };\n  }\n})\n</script>","<template>\n  <div\n    class=\"flex py-4 hover:bg-gray-50\"\n  >\n    <div class=\"flex-shrink-0 my-auto mx-2 \">\n      \n      <img\n        v-if=\"doctor.image\"\n        :src=\"doctor.image\"\n        alt=\"\"\n        style=\"width: 80px!important\"\n        class=\"rounded-full\"\n      >\n      <svg\n        v-else\n        style=\"width: 80px\"\n        xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n    </div>\n    <div\n      class=\"px-2 flex-grow flex flex-col\"\n    >\n       <div class=\"flex items-center\">\n         <div class=\"whitespace-nowrap font-medium pr-3\">{{ doctor.prefecture }}</div>\n         <!-- <div class=\" px-2 text-xs border-2 border-gray-600\">\n           オンライン診療検収受講済み\n          </div> -->\n       </div>\n       <div class=\"text-left mt-1\">\n         <div class=\"font-medium text-sm\">{{ doctor.first_kana }} {{ doctor.last_kana }}</div>\n         <div class=\"font-medium text-lg \">{{ doctor.first_name }} {{ doctor.last_name }}</div>\n         <div class=\"text-sm\">\n           {{ doctor.clinic_name }}\n         </div>\n         <div class=\"text-sm\">\n           {{ doctor.status }}\n         </div>\n       </div>\n    </div>\n    <div class=\"my-auto\">\n      <svg\n        @click=\"() => { router.push({ name: 'DiagnosticDoctorDetailTop', params: { id: doctor.id } }) }\"\n        class=\"w-8 h-8 text-gray-400 cursor-pointer\"\n        xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\" />\n      </svg>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { IDoctor } from '@/types/Interfaces';\nimport { useRouter } from 'vue-router';\n\nexport default defineComponent({\n  components: {\n  },\n  props: {\n    doctor: {\n      type: Object as () => IDoctor\n    }\n  },\n  setup() {\n    const router = useRouter();\n    return {\n      router\n    };\n  }\n})\n</script>","\nimport { defineComponent } from 'vue';\nimport { IDoctor } from '@/types/Interfaces';\nimport { useRouter } from 'vue-router';\n\nexport default defineComponent({\n  components: {\n  },\n  props: {\n    doctor: {\n      type: Object as () => IDoctor\n    }\n  },\n  setup() {\n    const router = useRouter();\n    return {\n      router\n    };\n  }\n})\n","import { render } from \"./ListCard.vue?vue&type=template&id=e03e0aa4\"\nimport script from \"./ListCard.vue?vue&type=script&lang=ts\"\nexport * from \"./ListCard.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { defineComponent, ref, onMounted } from 'vue';\n\nimport usePrescript from '@/types/Prescript';\nimport useDoctors from '@/types/Doctor';\nimport DoctorListCard from './ListCard.vue';\nimport DoctorListFilter from './ListFilter.vue';\nimport { IDoctor } from '@/types/Interfaces';\nimport {useRouter} from 'vue-router';\n\nexport default defineComponent({\n  components: {\n    DoctorListCard,\n  },\n  setup() {\n    const router = useRouter();\n\n    \n    const {\n      doctors,\n      fetchDoctors\n    } = useDoctors();\n\n    const dataReady = ref(false);\n    \n    onMounted(async () => {\n      try {\n        doctors.value = await fetchDoctors();\n        dataReady.value = true;\n        console.log(doctors.value)\n      } catch (err) {\n        console.error(err);\n      }\n    });\n    return {\n      dataReady,\n      doctors\n    };\n  }\n})\n","import { render } from \"./List.vue?vue&type=template&id=78039527\"\nimport script from \"./List.vue?vue&type=script&lang=ts\"\nexport * from \"./List.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}