{"version":3,"sources":["webpack:///./src/types/Questionaire.ts","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./src/types/Prescript.ts","webpack:///./src/views/ForClient/Diagnostic/Questionaires.vue","webpack:///./src/views/ForClient/Diagnostic/Questionaires.vue?447d","webpack:///./src/views/ForClient/Diagnostic/Questionaires.vue?f6cc"],"names":["useQuestionaire","questions","fetchQuestions","get","data","console","log","results","$","$map","map","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","target","proto","forced","callbackfn","this","arguments","length","undefined","getPrescript","fixInterview","selectDoctor","doctorId","patch","doctor","fetchPrescripts","setPrescriptProducts","prescriptNo","products","prescriptProducts","p","product","id","acceptPrescriptProducts","deletePrescriptProducts","delete","usePrescript","myPrescript","prescripts","class","fill-rule","d","clip-rule","title","router","push","xmlns","viewBox","fill","key","$route","fullPath","components","setup","value","status","name","render"],"mappings":"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","file":"js/Questionaires.c4a53e46.js","sourcesContent":["import { ref, computed } from 'vue';\nimport { IQuestion, IAnswer } from './Interfaces';\nimport { client } from '@/types/Axios';\n\nexport default function useQuestionaire() {\n  const questions = ref<IQuestion[]>([]);\n  \n  const fetchQuestions = async (): Promise<IQuestion[]> => {\n    const { data } = await client.get('/questions/');\n    console.log(data);\n    return data.results;\n    \n  };\n  \n  return {\n    questions,\n    fetchQuestions\n  }\n}","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","\n\nimport { ComputedRef, computed, ref, WritableComputedRef } from 'vue';\nimport { IPrescript, IProduct } from '@/types/Interfaces';\nimport { client } from '@/types/Axios';\n\n//const prescript: WritableComputedRef<IPrescript | null> = computed({\n  // get: () => {\n  //   const data = window.localStorage.getItem('prescript');\n  //   if (data) {\n  //     return JSON.parse(data);\n  //   } else {\n  //     return null;\n  //   }\n  // },\n  // set: (data: IPrescript | null) => {\n  //   if (data == null) {\n  //     window.localStorage.removeItem('prescript');\n  //     return;\n  //   }\n  //   window.localStorage.setItem('prescript', JSON.stringify(data))\n  // }\n// });\n\nconst getPrescript = async () => {\n  const {data} = await client.get('/prescript/');\n  console.log(data)\n  return data;\n}\n\nconst fixInterview = async () => {\n  const {data} = await client.get('/prescript/interview_fix')\n  return data;\n}\n\nconst selectDoctor = async (doctorId: number) => {\n  const {data} = await client.patch('/prescript/select_doctor', { doctor: doctorId })\n  return data; \n}\n\nconst fetchPrescripts = async (): Promise<IPrescript[]> => {\n  const {data} = await client.get('/prescripts/')\n  console.log(data)\n  return data.results;\n}\n\nconst setPrescriptProducts = async (prescriptNo: string, products: IProduct[]) => {\n  const prescriptProducts = products.map((p: IProduct) => ({ product: p.id }));\n  console.log(prescriptProducts)\n  const {data} = await client.patch(`/prescribe/${prescriptNo}`, { products: prescriptProducts });\n  console.log(data)\n  return data;\n}\n\nconst acceptPrescriptProducts = async () => {\n  const {data} = await client.patch('/prescript/exam_fix', {});\n  console.log(data);\n  return data;\n};\n\nconst deletePrescriptProducts = async (prescriptNo: string) => {\n  const {data} = await client.delete(`/prescribe/${prescriptNo}`);\n  return data;\n\n}\n\n\n\nexport default function usePrescript () {\n  const myPrescript = ref<IPrescript | null>(null);\n  const prescripts = ref<IPrescript[]>([]);\n\n  return {\n    // prescript,\n    myPrescript,\n    prescripts,\n    getPrescript,\n    fixInterview,\n    selectDoctor,\n    fetchPrescripts,\n    setPrescriptProducts,\n    acceptPrescriptProducts,\n    deletePrescriptProducts\n    \n  }\n}","<template>\n  <base-layout>\n    <template v-slot:title>\n      <div class=\"\">\n        <svg\n          @click=\"() => { router.push({ name: 'DiagnosticTop' }) }\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"absolute h-6 w-6 cursor-pointer\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n        </svg>\n        <div>\n          問診\n        </div>\n      </div>\n    </template>\n    <div class=\"flex-grow flex flex-col\">\n      <router-view\n        :myPrescript=\"myPrescript\"\n        :questions=\"questions\"\n        v-if=\"myPrescript != null && questions.length > 0\"\n        :key=\"$route.fullPath\"\n      ></router-view>\n    </div>\n  </base-layout>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, isProxy, onMounted, onUpdated, ref } from 'vue';\nimport useQuestionaire from '@/types/Questionaire';\nimport { IQuestion } from '@/types/Interfaces';\nimport usePrescript from '@/types/Prescript'\nimport { useRouter } from 'vue-router';\n\nexport default defineComponent({\n  components: {\n  },\n  setup() {\n    const router = useRouter();\n    const {\n      myPrescript,\n      getPrescript,\n    } = usePrescript();\n\n    const {\n      questions,\n      fetchQuestions,\n    } = useQuestionaire();\n  \n    onMounted(async () => {\n      myPrescript.value = await getPrescript();\n      const data = await fetchQuestions();\n      questions.value = data;\n    });\n    \n    onUpdated(() => {\n      if (myPrescript.value?.status != 1) {\n        router.push({ name: 'DiagnosticTop' })\n      }\n    })\n   \n    return {\n      myPrescript,\n      questions,\n    };\n  }\n})\n</script>","\nimport { defineComponent, isProxy, onMounted, onUpdated, ref } from 'vue';\nimport useQuestionaire from '@/types/Questionaire';\nimport { IQuestion } from '@/types/Interfaces';\nimport usePrescript from '@/types/Prescript'\nimport { useRouter } from 'vue-router';\n\nexport default defineComponent({\n  components: {\n  },\n  setup() {\n    const router = useRouter();\n    const {\n      myPrescript,\n      getPrescript,\n    } = usePrescript();\n\n    const {\n      questions,\n      fetchQuestions,\n    } = useQuestionaire();\n  \n    onMounted(async () => {\n      myPrescript.value = await getPrescript();\n      const data = await fetchQuestions();\n      questions.value = data;\n    });\n    \n    onUpdated(() => {\n      if (myPrescript.value?.status != 1) {\n        router.push({ name: 'DiagnosticTop' })\n      }\n    })\n   \n    return {\n      myPrescript,\n      questions,\n    };\n  }\n})\n","import { render } from \"./Questionaires.vue?vue&type=template&id=85c12d56\"\nimport script from \"./Questionaires.vue?vue&type=script&lang=ts\"\nexport * from \"./Questionaires.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}