{"version":3,"sources":["webpack:///./src/views/ForClient/Signup2.vue","webpack:///./src/views/ForClient/Signup2.vue?2b6f","webpack:///./src/views/ForClient/Signup2.vue?1d98","webpack:///./src/types/Auth.ts","webpack:///./src/mixins/FormValidator.ts"],"names":["class","stroke-linecap","stroke-linejoin","stroke-width","d","title","router","push","xmlns","fill","viewBox","stroke","ref","onSubmit","formError","label","id","type","required","autocomplete","formData","email","rules","formRequired","disabled","loading","components","setup","removeToken","getToken","sendSignupEmail","form","setFromError","message","value","window","setTimeout","event","isValid","checkValidity","alert","data","is_send","name","params","console","log","response","status","JSON","stringify","render","useAuth","userType","TOKEN_KEYS","customer","doctor","client","getUUID","get","post","activateAccount","token","registerProfile","registrationUrl","formDataCopy","address","street","building","put","localStorage","getItem","parse","createToken","postData","storeToken","setItem","removeItem","getUserId","getProfile","userId","storeProfile","getProfileFromStorage","removeProfile","signup","v","getRegexpTester","pattern","errorMessage","test"],"mappings":"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","file":"js/Signup2.d21afe81.js","sourcesContent":["<template>\n  <base-layout>\n    <template v-slot:title>\n      <div class=\"relative\">\n        <svg\n          @click=\"() => { router.push({ name: 'Signup1' }) }\"\n          class=\"absolute top-0 left-0 w-10 h-10 cursor-pointer\"\n          xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\" />\n        </svg>\n        <div class=\"\">\n          新規登録\n        </div>\n      </div>\n    </template>\n    <div class=\"grid grid-cols-12\">\n      <form\n        ref=\"form\"\n        class=\"py-5 col-span-12 sm:col-span-6 sm:col-start-4 md:col-span-4 md:col-start-5 p-5\"\n        @submit.prevent=\"onSubmit\"\n      >\n        <div\n          v-if=\"formError != ''\"\n          class=\"mb-5 text-red-600\"\n        >\n          {{ formError }}\n        </div>\n        <p-input\n          class=\"mb-10\"\n          label=\"メールアドレス\"\n          id=\"email\"\n          type=\"email\"\n          :required=\"true\"\n          autocomplete=\"email\"\n          v-model=\"formData.email\"\n          :rules=\"[formRequired]\"\n        >\n        </p-input>\n        \n        \n        <div\n          class=\"text-center\"\n        >\n          <button\n            :disabled=\"loading\"\n            type=\"submit\"\n            class=\"primary arrow w-64 mb-10\"\n          >\n            確認メールを送信\n            \n          </button>\n          <div>\n            <a class=\"cursor-pointer \">確認メールが届かない場合は？</a>\n          </div>\n        </div>\n      </form>\n    </div>\n  </base-layout>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, onMounted, ref,  } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ILogin, ISignup } from '@/types/Interfaces';\nimport {formRequired} from '@/mixins/FormValidator';\n\nimport useAuth from '@/types/Auth';\n\nexport default defineComponent({\n  components: {\n  },\n  setup() {\n    const router = useRouter();\n    \n    const {\n      getToken,\n      removeToken,\n      sendSignupEmail\n    } = useAuth();\n\n    const formData = ref({\n      email: '',\n    });\n    \n    const form = ref<HTMLFormElement | null>(null);\n\n    const formError = ref<string>('');\n    \n    const setFromError = (message: string) => {\n      formError.value = message;\n      window.setTimeout(() => {\n        formError.value = '';\n      }, 5000);  \n    };\n    \n    onMounted(() => {\n      removeToken();\n    });\n\n    const loading = ref(false);\n\n    const onSubmit = async (event: Event) => {\n      // validate\n      if (form.value) {\n        const isValid = form.value.checkValidity();\n        if (!isValid) {\n          alert('not vaida')\n          return;\n        }\n      }\n      try {\n        loading.value = true;\n        const data = await sendSignupEmail(formData.value);\n        if (data.is_send) {\n          router.push({ name: 'Signup3', params: { email: formData.value.email } });  \n        } else {\n          alert(data.message)\n        }\n      } catch (err) {\n        console.log(err)\n        if (err.response) {\n          const { status, data } = err.response;\n          console.log(data)\n         \n          setFromError(JSON.stringify(data))\n         \n        } else {\n          setFromError('ネットワークエラー')\n        }\n        \n      }\n      loading.value = false;\n      \n    };\n    return {\n      router,\n      loading,\n      form,\n      formRequired,\n      formData,\n      formError,\n      // formValid,\n      onSubmit\n    };\n  }\n})\n</script>","\nimport { defineComponent, onMounted, ref,  } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ILogin, ISignup } from '@/types/Interfaces';\nimport {formRequired} from '@/mixins/FormValidator';\n\nimport useAuth from '@/types/Auth';\n\nexport default defineComponent({\n  components: {\n  },\n  setup() {\n    const router = useRouter();\n    \n    const {\n      getToken,\n      removeToken,\n      sendSignupEmail\n    } = useAuth();\n\n    const formData = ref({\n      email: '',\n    });\n    \n    const form = ref<HTMLFormElement | null>(null);\n\n    const formError = ref<string>('');\n    \n    const setFromError = (message: string) => {\n      formError.value = message;\n      window.setTimeout(() => {\n        formError.value = '';\n      }, 5000);  \n    };\n    \n    onMounted(() => {\n      removeToken();\n    });\n\n    const loading = ref(false);\n\n    const onSubmit = async (event: Event) => {\n      // validate\n      if (form.value) {\n        const isValid = form.value.checkValidity();\n        if (!isValid) {\n          alert('not vaida')\n          return;\n        }\n      }\n      try {\n        loading.value = true;\n        const data = await sendSignupEmail(formData.value);\n        if (data.is_send) {\n          router.push({ name: 'Signup3', params: { email: formData.value.email } });  \n        } else {\n          alert(data.message)\n        }\n      } catch (err) {\n        console.log(err)\n        if (err.response) {\n          const { status, data } = err.response;\n          console.log(data)\n         \n          setFromError(JSON.stringify(data))\n         \n        } else {\n          setFromError('ネットワークエラー')\n        }\n        \n      }\n      loading.value = false;\n      \n    };\n    return {\n      router,\n      loading,\n      form,\n      formRequired,\n      formData,\n      formError,\n      // formValid,\n      onSubmit\n    };\n  }\n})\n","import { render } from \"./Signup2.vue?vue&type=template&id=48eecca2\"\nimport script from \"./Signup2.vue?vue&type=script&lang=ts\"\nexport * from \"./Signup2.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import useAxios from '@/types/Axios';\n\nimport { ILogin, ISignup, ICustomer, IPrescript, IToken, IRegistration } from '@/types/Interfaces';\nimport { computed, ComputedRef, withDirectives, WritableComputedRef } from 'vue';\nimport { cloneDeep, clone, runInContext, words } from \"lodash\";\n\n\nexport default function useAuth (userType = 'customer') {\n  const TOKEN_KEYS: { [key: string]: string } = {\n    customer: 'customer_token',\n    doctor: 'doctor_token'\n  }\n  const {\n    client\n  } = useAxios(userType);\n\n  const getUUID = async () => {\n    const {data} = await client.get('/uuid/')\n    console.log(data)\n    return data;\n  }\n  \n  const sendSignupEmail = async (formData: any) => {\n    const {data} = await client.post('/customer_pre_create/', formData);\n    console.log(data);\n    return data;  \n  };\n  const activateAccount = async (token: string) => {\n    const {data} = await client.get(`/customer_activator/${token}`);\n    console.log(data)\n    return data;  \n  };\n  const registerProfile = async (registrationUrl: string, formData: IRegistration) => {\n    const formDataCopy: any = cloneDeep(formData);\n    \n    formDataCopy.address = `${formDataCopy.street}${formDataCopy.building}`;\n    delete formDataCopy.street;\n    delete formDataCopy.building;\n    const {data} = await client.put(registrationUrl, formDataCopy);\n    console.log(data)\n    return data;\n  }\n  \n  const getToken = () => {\n    console.log('getting token from ' + TOKEN_KEYS[userType])\n    const d = window.localStorage.getItem(TOKEN_KEYS[userType])\n    if (d == null) return;\n    return JSON.parse(d);\n  }\n  const createToken = async (postData: ILogin) => {\n    const {data} = await client.post('/auth/jwt/create/', postData);\n    // console.log(data)\n    return data;\n    // window.localStorage.setItem('token', JSON.stringify(data));    \n  };\n  \n  const storeToken = (token: IToken) => {\n    console.log('storeing token' + TOKEN_KEYS[userType])\n    window.localStorage.setItem(TOKEN_KEYS[userType], JSON.stringify(token))\n  }\n  \n  const removeToken = () => {\n    window.localStorage.removeItem(TOKEN_KEYS[userType]);\n  };\n  \n  const getUserId = async () => {\n    const {data} = await client.get('/auth/users/me/')\n    return data.id;\n  };\n  \n  const getProfile = async (userId: number) => {\n    const {data} = await client.get(`/auth/users/${userId}/`);\n    console.log(data)\n    return data;\n  };\n  \n  const storeProfile = (data: any) => {\n    window.localStorage.setItem('profile', JSON.stringify(data))\n  }\n  const getProfileFromStorage = () => {\n    const data = window.localStorage.getItem('profile')\n  }\n  const removeProfile = () => {\n    window.localStorage.removeItem('profile')\n  }\n  \n  \n  const signup = async (postData: ISignup) => {\n    const { data } = await client.post(\n      `/signup/`, postData\n    );\n  };\n  return {\n    sendSignupEmail,\n    activateAccount,\n    registerProfile,\n    createToken,\n    storeToken,\n    getToken,\n    removeToken,\n    getUserId,\n    getProfile,\n    getProfileFromStorage,\n    removeProfile,\n    storeProfile,\n    signup,\n    getUUID\n  }\n}","\nconst required = (v: any) => {\n  if (typeof v === 'string') {\n    return v ? null : '必須項目です。'\n  }\n};\nconst getRegexpTester = (pattern: RegExp, errorMessage: string) => {\n  return (v: any) => {\n    return pattern.test(v) ? null : errorMessage;\n  }\n}\n\nexport {\n  required as formRequired,\n  getRegexpTester\n}"],"sourceRoot":""}